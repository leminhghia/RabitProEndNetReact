// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250326151157_FixBienTheSanPhamAdded5")]
    partial class FixBienTheSanPhamAdded5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.BienTheSanPham", b =>
                {
                    b.Property<int>("BienTheId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BienTheId"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("GiaBan")
                        .HasColumnType("real");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MauSac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("BienTheId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("BienTheSanPham");
                });

            modelBuilder.Entity("Backend.Models.DanhMuc", b =>
                {
                    b.Property<int>("DanhMucId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DanhMucId"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("IsActived")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("DanhMucId");

                    b.ToTable("DanhMuc");
                });

            modelBuilder.Entity("Backend.Models.HinhAnhSanPham", b =>
                {
                    b.Property<int>("HinhAnhId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HinhAnhId"));

                    b.Property<int>("BienTheId")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URLHinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HinhAnhId");

                    b.HasIndex("BienTheId");

                    b.ToTable("HinhAnhSanPham");
                });

            modelBuilder.Entity("Backend.Models.SanPham", b =>
                {
                    b.Property<int>("SanPhamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SanPhamId"));

                    b.Property<int>("DanhMucId")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("GiaGoc")
                        .HasColumnType("real");

                    b.Property<byte>("IsActived")
                        .HasColumnType("tinyint");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThuongHieuId")
                        .HasColumnType("int");

                    b.HasKey("SanPhamId");

                    b.HasIndex("DanhMucId");

                    b.HasIndex("ThuongHieuId");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("Backend.Models.ThuongHieu", b =>
                {
                    b.Property<int>("ThuongHieuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ThuongHieuId"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("IsActived")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ThuongHieuId");

                    b.ToTable("ThuongHieu");
                });

            modelBuilder.Entity("Backend.Models.BienTheSanPham", b =>
                {
                    b.HasOne("Backend.Models.SanPham", "SanPham")
                        .WithMany("BienTheSanPham")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Backend.Models.HinhAnhSanPham", b =>
                {
                    b.HasOne("Backend.Models.BienTheSanPham", "BienTheSanPham")
                        .WithMany("HinhAnhSanPham")
                        .HasForeignKey("BienTheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BienTheSanPham");
                });

            modelBuilder.Entity("Backend.Models.SanPham", b =>
                {
                    b.HasOne("Backend.Models.DanhMuc", "DanhMuc")
                        .WithMany("SanPham")
                        .HasForeignKey("DanhMucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.ThuongHieu", "ThuongHieu")
                        .WithMany("SanPham")
                        .HasForeignKey("ThuongHieuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhMuc");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("Backend.Models.BienTheSanPham", b =>
                {
                    b.Navigation("HinhAnhSanPham");
                });

            modelBuilder.Entity("Backend.Models.DanhMuc", b =>
                {
                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Backend.Models.SanPham", b =>
                {
                    b.Navigation("BienTheSanPham");
                });

            modelBuilder.Entity("Backend.Models.ThuongHieu", b =>
                {
                    b.Navigation("SanPham");
                });
#pragma warning restore 612, 618
        }
    }
}
